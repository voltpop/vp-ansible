---
# tasks file for Bitwarden
#
# Ensure that the client directory exists
- name: Create Client
  become: true
  become_user: root
  ansible.builtin.file:
    path: "/opt/{{ customer.name }}/bitwarden/tmp"
    state: directory

- name: "fetch the bitwarden docker script"
  become: true
  ansible.builtin.get_url:
    url: https://go.btwrdn.co/bw-sh
    dest: "/opt/{{ customer.name }}/bitwarden/bitwarden.sh"
    mode: 0700

- name: "Run the BitWarden Set up script"
  become: true
  ansible.builtin.expect:
    command: "/opt/{{ customer.name }}/bitwarden/bitwarden.sh install"
    responses:
      bitwarden.example.com:
        - "{{ customer.vars.bitwarden.url }}"
      vault:
        - "{{ customer.vars.bitwarden.db }}"
      installation id:
        - "{{ customer.vars.bitwarden.installation_id }}"
      installation key:
        - "{{ customer.vars.bitwarden.installation_key }}"
      SSL certificate to use:
        - "n"
      self-signed SSL certificate?:
        - "y"
  notify: Start Bitwarden

##   unpack the tarfile in /opt
#- name: "Fetch Bitwarden Docker stub"
#  become: true
#  ansible.builtin.get_url:
#    url: "https://github.com/bitwarden/server/releases/download/{{ customer.vars.bitwarden.version }}/docker-stub.zip"
#    dest: "/opt/{{ customer.name }}/bitwarden/tmp"
#
#- name: "Expand Bitwarden docker artifacts"
#  become: true
#  ansible.builtin.unarchive:
#    src: "/opt/{{ customer.name }}/bitwarden/tmp/docker-stub.zip"
#    dest: "/opt/{{ customer.name }}/bitwarden"
#    remote_src: yes
#  notify: Start BitWarden
#
#- name: "Remove tmp cruft"
#  become: true
#  ansible.builtin.file:
#    path: "/opt/{{ customer.name }}/bitwarden/tmp/"
#    state: absent

## copy env.example .env
#- name: "Deploy env file"
#  become: true
#  ansible.builtin.template:
#    src: "env.example.j2"
#    dest: "/opt/{{ customer.name }}/jitsi/.env"
#  notify: Start Jitsi
#
# deploy apache redirect
#
# Restart apache
